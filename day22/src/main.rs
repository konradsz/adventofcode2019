// https://codeforces.com/blog/entry/72593
// https://codeforces.com/blog/entry/72527
// https://github.com/DanaL/AdventOfCode/blob/master/2019/src/day_twentytwo.rs

use mod_exp::mod_exp;

fn main() {
    let coefficients = vec![
        (33, 0),
        (1, -3627),
        (29, 0),
        (1, -1908),
        (32, 0),
        (-1, -1),
        (1, -8923),
        (19, 0),
        (1, -8560),
        (73, 0),
        (-1, -1),
        (30, 0),
        (1, -8832),
        (70, 0),
        (-1, -1),
        (11, 0),
        (1, 4208),
        (47, 0),
        (-1, -1),
        (65, 0),
        (1, 5055),
        (66, 0),
        (1, -12),
        (24, 0),
        (1, -3069),
        (-1, -1),
        (1, 1271),
        (50, 0),
        (1, 7214),
        (72, 0),
        (-1, -1),
        (1, -67),
        (60, 0),
        (1, 7515),
        (68, 0),
        (-1, -1),
        (1, 4640),
        (68, 0),
        (1, 9047),
        (53, 0),
        (1, -3616),
        (39, 0),
        (-1, -1),
        (54, 0),
        (1, 6224),
        (42, 0),
        (-1, -1),
        (35, 0),
        (-1, -1),
        (1, 4189),
        (68, 0),
        (-1, -1),
        (1, -425),
        (28, 0),
        (1, 9932),
        (18, 0),
        (-1, -1),
        (1, -6404),
        (64, 0),
        (1, 724),
        (33, 0),
        (-1, -1),
        (1, 8328),
        (-1, -1),
        (1, -4667),
        (37, 0),
        (1, -3303),
        (13, 0),
        (-1, -1),
        (56, 0),
        (1, -2288),
        (13, 0),
        (1, 266),
        (65, 0),
        (1, -445),
        (33, 0),
        (1, -2652),
        (57, 0),
        (1, 9924),
        (56, 0),
        (1, -9807),
        (-1, -1),
        (1, 1485),
        (35, 0),
        (1, 4846),
        (5, 0),
        (1, -7747),
        (44, 0),
        (1, 7428),
        (71, 0),
        (-1, -1),
        (1, 7677),
        (3, 0),
        (1, 5335),
        (31, 0),
        (1, -7778),
        (5, 0),
        (1, -11),
        (-1, -1),
        (32, 0),
    ];

    const M_1: i128 = 10_007;
    let (a, b) = coefficients.iter().skip(1).fold((33, 0), |acc, x| {
        ((acc.0 * x.0) % M_1, (acc.1 * x.0 + x.1) % M_1)
    });

    // f(x) = a*x + b % M
    assert_eq!((a * 2019 + b) % M_1, 8_775);

    const M_2: i128 = 119_315_717_514_047;
    const K: i128 = 101_741_582_076_661;
    let (a, b) = coefficients.iter().skip(1).fold((33, 0), |acc, x| {
        ((acc.0 * x.0) % M_2, (acc.1 * x.0 + x.1) % M_2)
    });

    let ak = mod_exp(a, K, M_2);
    let p = (b * (1 - ak)).rem_euclid(M_2);
    let q = (1 - a).rem_euclid(M_2);

    // a^-1 mod M = a^(M-2) mod M
    let q_inv = mod_exp(q, M_2 - 2, M_2);
    let a_final = ak;
    let b_final = (p * q_inv).rem_euclid(M_2);
    let a_final_inv = mod_exp(a_final, M_2 - 2, M_2).rem_euclid(M_2);

    let x = 2020;
    // F^-1(x) = (x - B) / A mod M
    let f_inv_x = (x - b_final) * a_final_inv;

    assert_eq!(f_inv_x.rem_euclid(M_2), 47_141_544_607_176);
}
